ZVM 总体设计介绍
================

ZVM是基于Zephyr实时操作系统的虚拟机管理器（Hypervisor），系统架构如下图所示，主要功能模块包括处理器虚拟化、
内存虚拟化、中断虚拟化、时钟虚拟化及I/O虚拟化等功能。


基础模块简介
---------------------

处理器虚拟化
^^^^^^^^^^^^^^^^^^^^^^

CPU 虚拟化模块为每个 VM 的 每个vCPU 实现一个单独的上下文执行环境。在ZVM中，每个vCPU都是作为一个线程存在，
由Hypervisor统一进行调度，进而模拟虚拟机的行为。在ZVM中，为了提高vCPU的性能，我们使用了ARMv8硬件虚拟化的
支持，还应用了VHE支持，VHE可以使ZVM在不修改OS内核代码的情况下，将ZVM的主机操作系统迁移到EL2层中，
既降低了系统冗余，又提高了系统性能。

内存虚拟化模块
^^^^^^^^^^^^^^^^^^^^^^

内存虚拟化模块的主要作用是实现 VM 内存地址的隔离。监控VM对实际物理内存的访问，以保护物理内存。
ZVM利用ARMv8硬件特性,使用了两阶段的地址转换硬件。ARMv8为stage-2地址转换提供单独的硬件支持，
以提高地址翻译性能。


中断虚拟化模块
^^^^^^^^^^^^^^^^^^^^^^

中断虚拟化使用ARM通用中断控制器（GIC），并基于该设备实现虚拟中断配置。ZVM的设计是为每个VM提供
一个完全虚拟化的中断控制器，为VM提供虚拟中断服务。在中断触发逻辑中，通过配置相关寄存器，
ZVM将 VM 的中断统一路由到 Hypervisor层，Hypervisor 会将它们分配给不同的 vCPU。进而实现将中断
转发到 VM 的目的。

定时器虚拟化
^^^^^^^^^^^^^^^^^^^^^^

定时器虚拟化为每个 CPU 定义了一组虚拟定时器寄存器，它们在预定时间后单独计数并抛出中断，
由ZVM转发给 VM。 在VM切换过程中，虚拟定时器会计算VM的实际运行时间，并对虚拟机退出的时间进行补偿，
为虚拟机提供定时器服务。

设备虚拟化
^^^^^^^^^^^^^^^^^^^^^^

在设备虚拟化方面，ZVM提供了设备完全虚拟化、设备直通和设备半虚拟化等方式。对于主机独占设备，
采用了Memory-mapped I/O(MMIO)方法将设备地址映射到虚拟的内存地址，构建虚拟的设备空间，
实现VM对设备地址的访问。 对于直通设备，ZVM在VM运行过程中将该设备分配给指定的VM，并由VM直接使用。
在半虚拟化方面，ZVM还将支持virtIO半虚拟化方式，以提高虚拟机的性能。


核心功能模块介绍
---------------

待补充。。。

`Next>> 主机开发环境搭建 <https://gitee.com/openeuler/zvm/blob/master/zvm_doc/2_Environment_Configuration.rst>`__
